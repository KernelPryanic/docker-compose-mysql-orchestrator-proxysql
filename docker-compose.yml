version: "3.8"

services:
  orchestrator:
    image: orchestrator:3.2.6
    container_name: orchestrator
    environment:
      - MYSQL_ROOT_PASSWORD=pass123
    ports:
      - target: 3000
        published: 3000
        mode: host
    volumes:
      - orchestrator_db:/var/lib/mysql
      - ./orchestrator/orchestrator.conf.json:/etc/orchestrator.conf.json
    networks:
      - autofailover
    # entrypoint: [ "sleep", "infinity" ]

  orchestrator_init:
    image: orchestrator:3.2.6
    depends_on:
      - orchestrator
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 30
        window: 2s
    environment:
      - MYSQL_ROOT_PASSWORD=pass123
    volumes:
      - orchestrator_db:/var/lib/mysql
      - ./orchestrator/orchestrator.sql:/orchestrator.sql
    networks:
      - autofailover
    entrypoint:
      [
        "bash",
        "-c",
        "mysql -u root -ppass123 -h orchestrator < orchestrator.sql"
      ]

  mysql_master:
    image: mysql-master:latest
    container_name: mysql_master
    environment:
      - MYSQL_ROOT_PASSWORD=pass123
    volumes:
      - mysql_master:/var/lib/mysql
      - ./mysql/master/mysql.cnf:/etc/my.cnf
    networks:
      - autofailover
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "3306" ]
      interval: 15s
      timeout: 10s
      retries: 5
    # deploy:
    #   restart_policy:
    #     condition: none
    # entrypoint: [ "sleep", "infinity" ]

  mysql_master_init:
    image: mysql-master:latest
    environment:
      - MYSQL_ROOT_PASSWORD=pass123
    volumes:
      - ./mysql/master/replication_setup.sql:/replication_setup.sql
    networks:
      - autofailover
    depends_on:
      mysql_master:
        condition: service_healthy
    entrypoint:
      [
        "bash",
        "-c",
        "mysql -u root -ppass123 -h mysql_master < replication_setup.sql"
      ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 2s

  mysql_slave_init:
    image: mysql-slave:latest
    environment:
      - MYSQL_ROOT_PASSWORD=pass123
    volumes:
      - ./mysql/slave/replication_setup.sql:/replication_setup.sql
    networks:
      - autofailover
    depends_on:
      mysql_slave:
        condition: service_healthy
    entrypoint:
      [
        "bash",
        "-c",
        "mysql -u root -ppass123 -h mysql_slave < replication_setup.sql"
      ]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 2s

  mysql_slave:
    image: mysql-slave:latest
    container_name: mysql_slave
    environment:
      - MYSQL_ROOT_PASSWORD=pass123
    volumes:
      - mysql_slave:/var/lib/mysql
      - ./mysql/slave/mysql.cnf:/etc/my.cnf
    networks:
      - autofailover
    depends_on:
      mysql_master:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "3306" ]
      interval: 15s
      timeout: 10s
      retries: 5
    # deploy:
    #   restart_policy:
    #     condition: none

  proxysql:
    image: proxysql:2.3.2
    container_name: proxysql
    volumes:
      - ./proxysql/proxysql.cnf:/etc/proxysql.cnf
    networks:
      - autofailover
    ports:
      - target: 6032
        published: 6032
        mode: host
      - target: 6033
        published: 6033
        mode: host

volumes:
  orchestrator_db: {}
  mysql_master: {}
  mysql_slave: {}

networks:
  autofailover:
    driver: overlay
    ipam:
      config:
        - subnet: 10.1.18.0/24
